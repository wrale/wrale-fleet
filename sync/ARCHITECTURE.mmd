```mermaid
graph TB
    %% Sync System Overview
    subgraph SyncSystem["Fleet Sync (fleet/sync)"]
        direction TB
        
        %% Core Sync Engine
        subgraph SyncEngine["Sync Engine"]
            syncManager["Sync Manager"]
            stateTracker["State Tracker"]
            conflictResolver["Conflict Resolver"]
            queueManager["Queue Manager"]
            
            syncManager --> stateTracker
            stateTracker --> conflictResolver
            conflictResolver --> queueManager
        end

        %% Physical State Sync
        subgraph PhysicalSync["Physical State Sync"]
            deviceState["Device State"]
            envState["Environmental State"]
            locationState["Location State"]
            resourceState["Resource State"]
            
            deviceState --> envState
            envState --> locationState
            locationState --> resourceState
        end

        %% Distribution System
        subgraph Distribution["Distribution System"]
            configDist["Config Distribution"]
            policyDist["Policy Distribution"]
            updateDist["Update Distribution"]
            stateDist["State Distribution"]
            
            configDist --> policyDist
            policyDist --> updateDist
            updateDist --> stateDist
        end

        %% Transport Layer
        subgraph Transport["Transport Layer"]
            reliableSync["Reliable Sync"]
            p2pSync["P2P Sync"]
            meshSync["Mesh Sync"]
            fallbackSync["Fallback Sync"]
            
            reliableSync --> p2pSync
            p2pSync --> meshSync
            meshSync --> fallbackSync
        end

        %% Consistency Management
        subgraph Consistency["Consistency Management"]
            consensus["Consensus Engine"]
            validation["State Validation"]
            recovery["Recovery System"]
            verification["State Verification"]
            
            consensus --> validation
            validation --> recovery
            recovery --> verification
        end
    end

    %% External Systems
    subgraph ExternalSystems["External Systems"]
        brain["fleet/brain"]
        edge["fleet/edge"]
        metal["metal/ Layer"]
    end

    %% Data Stores
    subgraph Storage["Persistent Storage"]
        stateStore["State Store"]
        configStore["Config Store"]
        historyStore["History Store"]
    end

    %% Integration Flows
    brain <--> syncManager
    edge <--> reliableSync
    metal <--> deviceState

    %% Storage Flows
    stateTracker --> stateStore
    configDist --> configStore
    verification --> historyStore

    %% Physical Flows
    metal --> deviceState
    deviceState --> consensus

    %% Style Definitions
    classDef core fill:#f9f,stroke:#333,stroke-width:2px
    classDef physical fill:#fbb,stroke:#333,stroke-width:2px
    classDef transport fill:#bbf,stroke:#333,stroke-width:1px
    classDef storage fill:#bfb,stroke:#333,stroke-width:1px

    class syncManager,stateTracker core
    class deviceState,envState physical
    class reliableSync,p2pSync transport
    class stateStore,configStore storage

    %% Notes
    subgraph SyncPrinciples["Sync Principles"]
        note1["1. Physical State Consistency"]
        note2["2. Reliable Distribution"]
        note3["3. Conflict Resolution"]
        note4["4. Recovery Guarantees"]
    end

    %% Error Handling
    subgraph ErrorHandling["Error Management"]
        syncRecovery["Sync Recovery"]
        errorHandling["Error Handling"]
        stateReconciliation["State Reconciliation"]
        
        syncRecovery --> errorHandling
        errorHandling --> stateReconciliation
    end
```