```mermaid
graph TB
    subgraph TestSystem["Testing System (shared/testing)"]
        direction TB
        
        subgraph TestFramework["Testing Framework"]
            runner["Test Runner"]
            fixtures["Test Fixtures"]
            assertions["Assertions"]
            reporter["Test Reporter"]
            
            runner --> fixtures
            fixtures --> assertions
            assertions --> reporter
        end

        subgraph PhysicalTesting["Physical Testing"]
            hwMock["Hardware Mocks"]
            envSim["Environmental Simulation"]
            loadGen["Load Generation"]
            sensorSim["Sensor Simulation"]
            
            hwMock --> envSim
            envSim --> loadGen
            loadGen --> sensorSim
        end

        subgraph Integration["Integration Testing"]
            metalTest["Metal Integration"]
            fleetTest["Fleet Integration"]
            userTest["User Integration"]
            e2eTest["End-to-End Testing"]
            
            metalTest --> fleetTest
            fleetTest --> userTest
            userTest --> e2eTest
        end

        subgraph Utilities["Test Utilities"]
            helpers["Test Helpers"]
            matchers["Custom Matchers"]
            generators["Data Generators"]
            cleanup["Test Cleanup"]
            
            helpers --> matchers
            matchers --> generators
            generators --> cleanup
        end
    end

    subgraph Components["System Components"]
        metal["metal/ Layer"]
        fleet["fleet/ Layer"]
        user["user/ Layer"]
    end

    subgraph Infrastructure["Test Infrastructure"]
        ci["CI System"]
        monitoring["Test Monitoring"]
        coverage["Coverage Analysis"]
    end

    %% Integration Flows
    metal --> metalTest
    fleet --> fleetTest
    user --> userTest

    %% Framework Flows
    fixtures --> hwMock
    assertions --> matchers
    reporter --> monitoring

    %% Monitoring Flows
    e2eTest --> coverage
    reporter --> ci
    coverage --> ci

    classDef framework fill:#f9f,stroke:#333,stroke-width:2px
    classDef physical fill:#fbb,stroke:#333,stroke-width:2px
    classDef integration fill:#bbf,stroke:#333,stroke-width:1px
    classDef util fill:#bfb,stroke:#333,stroke-width:1px

    class runner,fixtures,assertions framework
    class hwMock,envSim,sensorSim physical
    class metalTest,fleetTest,userTest integration
    class helpers,matchers,generators util

    %% Notes
    subgraph TestingPrinciples["Testing Principles"]
        note1["1. Physical Simulation First"]
        note2["2. Comprehensive Coverage"]
        note3["3. Integration Focus"]
        note4["4. Safety Validation"]
    end
```